#serve static files
GET /                     controllers.Assets.at(path="/public", file= "index.html")
GET /public/*file         controllers.Assets.at(path="/public", file:String)


# User login endpoint
# REQUIRED {"user":<username>, "pass":<password>}
# Returns user token
POST /user/login            server.app.controllers.Users.loginUser()


# User registration endpoint
# REQUIRED {"user":<username>, "pass":<password>}
# Returns user token
POST /user/register         server.app.controllers.Users.registerUser()


# Get recipe list given a list of tags
# REQUIRED: { :<recipe_tags> }
# OPTIONAL: { :<recipe_tags>/:<range_start>/:<range_end> }
# EXAMPLE:  tags = Indian,Vegan, range_start = 5, range_end = 10
#           /Indian,Vegan/5/10
POST /recipe/tags/:recipe_tags                           server.app.controllers.Recipes.getRecipesByTagDefault(recipe_tags: String)
POST /recipe/tags/:recipe_tags/:range_start/:range_end   server.app.controllers.Recipes.getRecipesByTag(recipe_tags: String, range_start: Integer, range_end: Integer)


# Search recipe titles
# REQUIRED: { :<recipe_title> }
# OPTIONAL: { :<recipe_title>/:<range_start>/:<range_end> }
# EXAMPLE:  title = Pizza, range_start = 5, range_end = 10
#           /Pizza/5/10
POST /recipe/search/:recipe_title                            server.app.controllers.Recipes.searchRecipeTitlesDefault(recipe_title: String)
POST /recipe/search/:recipe_title/:range_start/:range_end    server.app.controllers.Recipes.searchRecipeTitles(recipe_title: String, range_start: Integer, range_end: Integer)


# Get recipe by id
# REQUIRED: { id: <recipe_id> }
POST /recipe/id/:recipe_id           server.app.controllers.Recipes.getRecipeById(recipe_id: String)


# Update recipe rating
# REQUIRED: { "userID":<userID> + recipe/:<recipe_id>/rate/:<rating>}
# EXAMPLE:  userID = xyz789, recipe_id = 12345, rating = 4.5
#           /recipe/12345/rate/4.5    	 		(userID needs to be in JSON)
POST /recipe/:recipe_id/rate/:rating     		server.app.controllers.Recipes.updateRating(recipe_id: String, rating: Double)


# Add recipeID to user's grocery list
# REQUIRED: { "userID":<userID> + user/groceryList/add/:<recipe_id>}
# EXAMPLE:  userID = xyz789, recipe_id = 12345
#           user/groceryList/add/12345     		(userID needs to be in JSON)
POST /user/groceryList/add/:recipe_id    		server.app.controllers.Users.addRecipeToGroceryList(recipe_id: String)


# Remove recipeID from user's grocery list
# REQUIRED: { "userID":<userID> + user/groceryList/remove/:<recipe_id>}
# EXAMPLE:  userID = xyz789, recipe_id = 12345
#           user/groceryList/remove/12345 		(userID needs to be in JSON)
POST /user/groceryList/remove/:recipe_id		server.app.controllers.Users.removeRecipeFromGroceryList(recipe_id: String)


# Get user's grocery list
# REQUIRED: { "userID":<userID> + user/groceryList}
# EXAMPLE:  userID = xyz789
#           user/groceryList   					(userID needs to be in JSON)
POST /user/groceryList   						server.app.controllers.Users.getGroceryList()


#OPTIONS Request
OPTIONS /*path                       server.app.Application.preflight(path: String)
